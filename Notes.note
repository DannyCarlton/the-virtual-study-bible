

https://developer.wordpress.org/plugins/plugin-basics/

Redesign virtualbible.org as a plugin site.

The current form of the Settings page... 
	Once installed, use a different format to show 
		modules (installed, not installed, with new modules highlighted.)
		Styles used and new styles available.
Fontawesome rotating arrows on submit button 


TODAY... 
	Add nonce to all ajax calls





https://www.sitepoint.com/how-to-use-ajax-in-wordpress-a-real-world-example/
https://www.cloudways.com/blog/wordpress-ajax/
https://wpsnippets.org/blog/wordpress-ajax-guide/
https://wpengine.com/resources/using-ajax-in-wordpress/
https://wpwebinfotech.com/blog/how-to-use-ajax-in-wordpress/
https://wpmudev.com/blog/using-ajax-with-wordpress/
https://www.codetab.org/tutorial/wordpress-plugin-development/ajax/wordpress-ajax/


Step #1... 
	Get plugin to install... 
Step #2... 
	Display Dashboard...
		Modules...
		Help...
		(link to) Settings...
		(link t) Contribute...
Step #3...
	Load modules.





What the plugin should do... 
	Installation... 
		create needed database tables...
			kjvs,books,
			USed for PIM: av,av_coding_json,books,commentary_*,easton_dic,intro_gty,kjv_books,kjv_ref,lex_greek,lex_hebrew,outline,text_greek,text_hebrew,text_kjv,xref_holman
		import data for database tables.
			kjvs, books, strong's, Easton, 
			kjvs (add paragraph markings) [in the future: add italicized, words in red, poetry]
			[outline, thompson, akjv, websters, geneva, margin notes, ylt]
		Create page for accessing data.
	When active... 
		Display splash page.
		provide reference search.
		provide keyword search.
		Display search results.
		passage... 
			In column with xref.
		word search... 
			As verses with word in bold.
			Linked to verse in context (full chapter with the verse highlighted)
		Two column display... 
			Verses (with xref) on the left.
			Study elements on the right.
		Links words to Strong's definitions.
		Links words to Easton definitions.
	Settings Page... 
		Xxx


register_activation_hook( __FILE__, 'virtual_bible_load_db_books');

# import kjv books from CSV file.
function virtual_bible_load_db_books()
	{
	global $wpdb;
	$charset_collate = $wpdb->get_charset_collate();
	$table_name = $wpdb->prefix . 'virtual_bible_books';

/*
    $file = fopen('virtual_bible_books.csv', "r");

    while (($column = fgetcsv($file, 10000, ",")) !== FALSE) 
		{
        $wpdb->insert
			( 
            $table_name,
            array
				( 
				'id'		=> '" . $column[0] . "',
				'book'		=> '" . $column[1] . "',
				'chapters'	=> '" . $column[2] . "',
				'abbr'		=> '" . $column[3] . "',
				'longname'	=> '" . $column[4] . "'
				)
			);
		}
*/
	}


https://developer.wordpress.org/reference/functions/wp_insert_post/
https://developer.wordpress.org/reference/functions/sanitize_title/

__________________________________________

$check_page_exist = get_page_by_title('title_of_the_page', 'OBJECT', 'page');
// Check if the page already exists
if(empty($check_page_exist)) {
    $page_id = wp_insert_post(
        array(
        'comment_status' => 'close',
        'ping_status'    => 'close',
        'post_author'    => 1,
        'post_title'     => ucwords('title_of_the_page'),
        'post_name'      => strtolower(str_replace(' ', '-', trim('title_of_the_page'))),
        'post_status'    => 'publish',
        'post_content'   => 'Content of the page',
        'post_type'      => 'page',
        'post_parent'    => 'id_of_the_parent_page_if_it_available'
        )
    );
}
___________________________________________

function some_function()
{
   $post_details = array(
  'post_title'    => 'Page title',
  'post_content'  => 'Content of your page',
  'post_status'   => 'publish',
  'post_author'   => 1,
  'post_type' => 'page'
   );
   wp_insert_post( $post_details );
}

register_activation_hook(__FILE__, 'some_function');

__________________________________________

function create_page($title_of_the_page,$content,$parent_id = NULL ) 
{
    $objPage = get_page_by_title($title_of_the_page, 'OBJECT', 'page');
    if( ! empty( $objPage ) )
    {
        echo "Page already exists:" . $title_of_the_page . "<br/>";
        return $objPage->ID;
    }
    
    $page_id = wp_insert_post(
            array(
            'comment_status' => 'close',
            'ping_status'    => 'close',
            'post_author'    => 1,
            'post_title'     => ucwords($title_of_the_page),
            'post_name'      => strtolower(str_replace(' ', '-', trim($title_of_the_page))),
            'post_status'    => 'publish',
            'post_content'   => $content,
            'post_type'      => 'page',
            'post_parent'    =>  $parent_id //'id_of_the_parent_page_if_it_available'
            )
        );
    echo "Created page_id=". $page_id." for page '".$title_of_the_page. "'<br/>";
    return $page_id;
}

create_page( 'How it works', 'This is how it works');
create_page( 'Contact Us', 'The contact us page');
create_page( 'About Us', 'The about us page');
create_page( 'Team', 'The team page');
$pid = create_page( 'Sample Page', 'This is sample page');
create_page( 'Sample SubPage 1', 'This is sample SubPage 1',$pid);
create_page( 'Sample SubPage 2', 'This is sample SubPage 2',$pid);

_________________________________________________
